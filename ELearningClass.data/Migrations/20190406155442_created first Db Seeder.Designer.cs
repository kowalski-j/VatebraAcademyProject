// <auto-generated />
using System;
using ELearningClass.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ELearningClass.data.Migrations
{
    [DbContext(typeof(ELearningDataContext))]
    [Migration("20190406155442_created first Db Seeder")]
    partial class createdfirstDbSeeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ELearningClass.data.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CourseDescription");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new { Id = 1, CourseCode = "CSC 001", CourseDescription = "This course teaches HTML", CourseTitle = "Learning HTML", DateCreated = new DateTime(2019, 4, 6, 16, 54, 41, 917, DateTimeKind.Local), DateUpdated = new DateTime(2019, 4, 6, 16, 54, 41, 919, DateTimeKind.Local) },
                        new { Id = 2, CourseCode = "CSC 002", CourseDescription = "", CourseTitle = "Learning Ef", DateCreated = new DateTime(2019, 4, 6, 16, 54, 41, 919, DateTimeKind.Local), DateUpdated = new DateTime(2019, 4, 6, 16, 54, 41, 919, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("ELearningClass.data.Entities.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CourseId");

                    b.Property<int?>("CourseId1");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<long>("StudentId");

                    b.Property<int?>("StudentId1");

                    b.HasKey("Id");

                    b.HasIndex("CourseId1");

                    b.HasIndex("StudentId1");

                    b.ToTable("Enrollment");

                    b.HasData(
                        new { Id = 1, CourseId = 1L, DateCreated = new DateTime(2019, 4, 6, 16, 54, 41, 920, DateTimeKind.Local), DateUpdated = new DateTime(2019, 4, 6, 16, 54, 41, 920, DateTimeKind.Local), StudentId = 1L },
                        new { Id = 2, CourseId = 2L, DateCreated = new DateTime(2019, 4, 6, 16, 54, 41, 920, DateTimeKind.Local), DateUpdated = new DateTime(2019, 4, 6, 16, 54, 41, 920, DateTimeKind.Local), StudentId = 2L }
                    );
                });

            modelBuilder.Entity("ELearningClass.data.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MatricNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new { Id = 1, DateCreated = new DateTime(2019, 4, 6, 16, 54, 41, 920, DateTimeKind.Local), DateUpdated = new DateTime(2019, 4, 6, 16, 54, 41, 920, DateTimeKind.Local), FirstName = "Anthonia", LastName = "Ebhoaye", MatricNumber = "1234567890" },
                        new { Id = 2, DateCreated = new DateTime(2019, 4, 6, 16, 54, 41, 920, DateTimeKind.Local), DateUpdated = new DateTime(2019, 4, 6, 16, 54, 41, 920, DateTimeKind.Local), FirstName = "Lucky", LastName = "Moye", MatricNumber = "756449675" }
                    );
                });

            modelBuilder.Entity("ELearningClass.data.Entities.Enrollment", b =>
                {
                    b.HasOne("ELearningClass.data.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId1");

                    b.HasOne("ELearningClass.data.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId1");
                });
#pragma warning restore 612, 618
        }
    }
}
